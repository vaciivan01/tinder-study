{"ast":null,"code":"/* global WebKitCSSMatrix */\nconst React = require('react');\n\nconst sleep = require('p-sleep');\n\nconst settings = {\n  snapBackDuration: 300,\n  maxTilt: 5,\n  bouncePower: 0.2,\n  swipeThreshold: 300 // px/s\n\n};\n\nconst getElementSize = element => {\n  const elementStyles = window.getComputedStyle(element);\n  const widthString = elementStyles.getPropertyValue('width');\n  const width = Number(widthString.split('px')[0]);\n  const heightString = elementStyles.getPropertyValue('height');\n  const height = Number(heightString.split('px')[0]);\n  return {\n    x: width,\n    y: height\n  };\n};\n\nconst pythagoras = (x, y) => {\n  return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n};\n\nconst normalize = function (vector) {\n  let multiplier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  const length = Math.sqrt(Math.pow(vector.x, 2) + Math.pow(vector.y, 2));\n  return {\n    x: vector.x * multiplier / length,\n    y: vector.y * multiplier / length\n  };\n};\n\nconst animateOut = async function (element, speed) {\n  let easeIn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  const startPos = getTranslate(element);\n  const bodySize = getElementSize(document.body);\n  const diagonal = pythagoras(bodySize.x, bodySize.y);\n  const velocity = pythagoras(speed.x, speed.y);\n  const time = diagonal / velocity;\n  const multiplier = diagonal / velocity;\n  const translateString = translationString(speed.x * multiplier + startPos.x, -speed.y * multiplier + startPos.y);\n  let rotateString = '';\n  const rotationPower = 200;\n\n  if (easeIn) {\n    element.style.transition = 'ease ' + time + 's';\n  } else {\n    element.style.transition = 'ease-out ' + time + 's';\n  }\n\n  if (getRotation(element) === 0) {\n    rotateString = rotationString((Math.random() - 0.5) * rotationPower);\n  } else if (getRotation(element) > 0) {\n    rotateString = rotationString(Math.random() * rotationPower / 2 + getRotation(element));\n  } else {\n    rotateString = rotationString((Math.random() - 1) * rotationPower / 2 + getRotation(element));\n  }\n\n  element.style.transform = translateString + rotateString;\n  await sleep(time * 1000);\n};\n\nconst animateBack = async element => {\n  element.style.transition = settings.snapBackDuration + 'ms';\n  const startingPoint = getTranslate(element);\n  const translation = translationString(startingPoint.x * -settings.bouncePower, startingPoint.y * -settings.bouncePower);\n  const rotation = rotationString(getRotation(element) * -settings.bouncePower);\n  element.style.transform = translation + rotation;\n  await sleep(settings.snapBackDuration * 0.75);\n  element.style.transform = 'none';\n  await sleep(settings.snapBackDuration);\n  element.style.transition = '10ms';\n};\n\nconst getSwipeDirection = property => {\n  if (Math.abs(property.x) > Math.abs(property.y)) {\n    if (property.x > settings.swipeThreshold) {\n      return 'right';\n    } else if (property.x < -settings.swipeThreshold) {\n      return 'left';\n    }\n  } else {\n    if (property.y > settings.swipeThreshold) {\n      return 'up';\n    } else if (property.y < -settings.swipeThreshold) {\n      return 'down';\n    }\n  }\n\n  return 'none';\n};\n\nconst calcSpeed = (oldLocation, newLocation) => {\n  const dx = newLocation.x - oldLocation.x;\n  const dy = oldLocation.y - newLocation.y;\n  const dt = (newLocation.time - oldLocation.time) / 1000;\n  return {\n    x: dx / dt,\n    y: dy / dt\n  };\n};\n\nconst translationString = (x, y) => {\n  const translation = 'translate(' + x + 'px, ' + y + 'px)';\n  return translation;\n};\n\nconst rotationString = rot => {\n  const rotation = 'rotate(' + rot + 'deg)';\n  return rotation;\n};\n\nconst getTranslate = element => {\n  const style = window.getComputedStyle(element);\n  const matrix = new WebKitCSSMatrix(style.webkitTransform);\n  const ans = {\n    x: matrix.m41,\n    y: -matrix.m42\n  };\n  return ans;\n};\n\nconst getRotation = element => {\n  const style = window.getComputedStyle(element);\n  const matrix = new WebKitCSSMatrix(style.webkitTransform);\n  const ans = -Math.asin(matrix.m21) / (2 * Math.PI) * 360;\n  return ans;\n};\n\nconst dragableTouchmove = (coordinates, element, offset, lastLocation) => {\n  const pos = {\n    x: coordinates.x + offset.x,\n    y: coordinates.y + offset.y\n  };\n  const newLocation = {\n    x: pos.x,\n    y: pos.y,\n    time: new Date().getTime()\n  };\n  const translation = translationString(pos.x, pos.y);\n  const rotCalc = calcSpeed(lastLocation, newLocation).x / 1000;\n  const rotation = rotationString(rotCalc * settings.maxTilt);\n  element.style.transform = translation + rotation;\n  return newLocation;\n};\n\nconst touchCoordinatesFromEvent = e => {\n  const touchLocation = e.targetTouches[0];\n  return {\n    x: touchLocation.clientX,\n    y: touchLocation.clientY\n  };\n};\n\nconst mouseCoordinatesFromEvent = e => {\n  return {\n    x: e.clientX,\n    y: e.clientY\n  };\n};\n\nconst TinderCard = React.forwardRef((_ref, ref) => {\n  let {\n    flickOnSwipe = true,\n    children,\n    onSwipe,\n    onCardLeftScreen,\n    className,\n    preventSwipe = [],\n    swipeRequirementType = 'velocity',\n    swipeThreshold = settings.swipeThreshold,\n    onSwipeRequirementFulfilled,\n    onSwipeRequirementUnfulfilled\n  } = _ref;\n  settings.swipeThreshold = swipeThreshold;\n  const swipeAlreadyReleased = React.useRef(false);\n  const element = React.useRef();\n  React.useImperativeHandle(ref, () => ({\n    async swipe() {\n      let dir = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'right';\n      if (onSwipe) onSwipe(dir);\n      const power = 1000;\n      const disturbance = (Math.random() - 0.5) * 100;\n\n      if (dir === 'right') {\n        await animateOut(element.current, {\n          x: power,\n          y: disturbance\n        }, true);\n      } else if (dir === 'left') {\n        await animateOut(element.current, {\n          x: -power,\n          y: disturbance\n        }, true);\n      } else if (dir === 'up') {\n        await animateOut(element.current, {\n          x: disturbance,\n          y: power\n        }, true);\n      } else if (dir === 'down') {\n        await animateOut(element.current, {\n          x: disturbance,\n          y: -power\n        }, true);\n      }\n\n      element.current.style.display = 'none';\n      if (onCardLeftScreen) onCardLeftScreen(dir);\n    },\n\n    async restoreCard() {\n      element.current.style.display = 'block';\n      await animateBack(element.current);\n    }\n\n  }));\n  const handleSwipeReleased = React.useCallback(async (element, speed) => {\n    if (swipeAlreadyReleased.current) {\n      return;\n    }\n\n    swipeAlreadyReleased.current = true;\n    const currentPostion = getTranslate(element); // Check if this is a swipe\n\n    const dir = getSwipeDirection(swipeRequirementType === 'velocity' ? speed : currentPostion);\n\n    if (dir !== 'none') {\n      if (onSwipe) onSwipe(dir);\n\n      if (flickOnSwipe) {\n        if (!preventSwipe.includes(dir)) {\n          const outVelocity = swipeRequirementType === 'velocity' ? speed : normalize(currentPostion, 600);\n          await animateOut(element, outVelocity);\n          element.style.display = 'none';\n          if (onCardLeftScreen) onCardLeftScreen(dir);\n          return;\n        }\n      }\n    } // Card was not flicked away, animate back to start\n\n\n    animateBack(element);\n  }, [swipeAlreadyReleased, flickOnSwipe, onSwipe, onCardLeftScreen, preventSwipe, swipeRequirementType]);\n  const handleSwipeStart = React.useCallback(() => {\n    swipeAlreadyReleased.current = false;\n  }, [swipeAlreadyReleased]);\n  React.useLayoutEffect(() => {\n    let offset = {\n      x: null,\n      y: null\n    };\n    let speed = {\n      x: 0,\n      y: 0\n    };\n    let lastLocation = {\n      x: 0,\n      y: 0,\n      time: new Date().getTime()\n    };\n    let mouseIsClicked = false;\n    let swipeThresholdFulfilledDirection = 'none';\n    element.current.addEventListener('touchstart', ev => {\n      ev.preventDefault();\n      handleSwipeStart();\n      offset = {\n        x: -touchCoordinatesFromEvent(ev).x,\n        y: -touchCoordinatesFromEvent(ev).y\n      };\n    });\n    element.current.addEventListener('mousedown', ev => {\n      ev.preventDefault();\n      mouseIsClicked = true;\n      handleSwipeStart();\n      offset = {\n        x: -mouseCoordinatesFromEvent(ev).x,\n        y: -mouseCoordinatesFromEvent(ev).y\n      };\n    });\n\n    const handleMove = coordinates => {\n      // Check fulfillment\n      if (onSwipeRequirementFulfilled || onSwipeRequirementUnfulfilled) {\n        const dir = getSwipeDirection(swipeRequirementType === 'velocity' ? speed : getTranslate(element.current));\n\n        if (dir !== swipeThresholdFulfilledDirection) {\n          swipeThresholdFulfilledDirection = dir;\n\n          if (swipeThresholdFulfilledDirection === 'none') {\n            if (onSwipeRequirementUnfulfilled) onSwipeRequirementUnfulfilled();\n          } else {\n            if (onSwipeRequirementFulfilled) onSwipeRequirementFulfilled(dir);\n          }\n        }\n      } // Move\n\n\n      const newLocation = dragableTouchmove(coordinates, element.current, offset, lastLocation);\n      speed = calcSpeed(lastLocation, newLocation);\n      lastLocation = newLocation;\n    };\n\n    element.current.addEventListener('touchmove', ev => {\n      ev.preventDefault();\n      handleMove(touchCoordinatesFromEvent(ev));\n    });\n    element.current.addEventListener('mousemove', ev => {\n      ev.preventDefault();\n\n      if (mouseIsClicked) {\n        handleMove(mouseCoordinatesFromEvent(ev));\n      }\n    });\n    element.current.addEventListener('touchend', ev => {\n      ev.preventDefault();\n      handleSwipeReleased(element.current, speed);\n    });\n    element.current.addEventListener('mouseup', ev => {\n      if (mouseIsClicked) {\n        ev.preventDefault();\n        mouseIsClicked = false;\n        handleSwipeReleased(element.current, speed);\n      }\n    });\n    element.current.addEventListener('mouseleave', ev => {\n      if (mouseIsClicked) {\n        ev.preventDefault();\n        mouseIsClicked = false;\n        handleSwipeReleased(element.current, speed);\n      }\n    });\n  }, []); // TODO fix so swipeRequirementType can be changed on the fly. Pass as dependency cleanup eventlisteners and update new eventlisteners.\n\n  return React.createElement('div', {\n    ref: element,\n    className\n  }, children);\n});\nmodule.exports = TinderCard;","map":{"version":3,"sources":["/Users/ivanvaci/Downloads/personal/tinder-study/node_modules/react-tinder-card/index.js"],"names":["React","require","sleep","settings","snapBackDuration","maxTilt","bouncePower","swipeThreshold","getElementSize","element","elementStyles","window","getComputedStyle","widthString","getPropertyValue","width","Number","split","heightString","height","x","y","pythagoras","Math","sqrt","pow","normalize","vector","multiplier","length","animateOut","speed","easeIn","startPos","getTranslate","bodySize","document","body","diagonal","velocity","time","translateString","translationString","rotateString","rotationPower","style","transition","getRotation","rotationString","random","transform","animateBack","startingPoint","translation","rotation","getSwipeDirection","property","abs","calcSpeed","oldLocation","newLocation","dx","dy","dt","rot","matrix","WebKitCSSMatrix","webkitTransform","ans","m41","m42","asin","m21","PI","dragableTouchmove","coordinates","offset","lastLocation","pos","Date","getTime","rotCalc","touchCoordinatesFromEvent","e","touchLocation","targetTouches","clientX","clientY","mouseCoordinatesFromEvent","TinderCard","forwardRef","ref","flickOnSwipe","children","onSwipe","onCardLeftScreen","className","preventSwipe","swipeRequirementType","onSwipeRequirementFulfilled","onSwipeRequirementUnfulfilled","swipeAlreadyReleased","useRef","useImperativeHandle","swipe","dir","power","disturbance","current","display","restoreCard","handleSwipeReleased","useCallback","currentPostion","includes","outVelocity","handleSwipeStart","useLayoutEffect","mouseIsClicked","swipeThresholdFulfilledDirection","addEventListener","ev","preventDefault","handleMove","createElement","module","exports"],"mappings":"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","sourcesContent":["/* global WebKitCSSMatrix */\n\nconst React = require('react')\nconst sleep = require('p-sleep')\n\nconst settings = {\n  snapBackDuration: 300,\n  maxTilt: 5,\n  bouncePower: 0.2,\n  swipeThreshold: 300 // px/s\n}\n\nconst getElementSize = (element) => {\n  const elementStyles = window.getComputedStyle(element)\n  const widthString = elementStyles.getPropertyValue('width')\n  const width = Number(widthString.split('px')[0])\n  const heightString = elementStyles.getPropertyValue('height')\n  const height = Number(heightString.split('px')[0])\n  return { x: width, y: height }\n}\n\nconst pythagoras = (x, y) => {\n  return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2))\n}\n\nconst normalize = (vector, multiplier = 1) => {\n  const length = Math.sqrt(Math.pow(vector.x, 2) + Math.pow(vector.y, 2))\n  return { x: vector.x * multiplier / length, y: vector.y * multiplier / length }\n}\n\nconst animateOut = async (element, speed, easeIn = false) => {\n  const startPos = getTranslate(element)\n  const bodySize = getElementSize(document.body)\n  const diagonal = pythagoras(bodySize.x, bodySize.y)\n\n  const velocity = pythagoras(speed.x, speed.y)\n  const time = diagonal / velocity\n  const multiplier = diagonal / velocity\n\n  const translateString = translationString(speed.x * multiplier + startPos.x, -speed.y * multiplier + startPos.y)\n  let rotateString = ''\n\n  const rotationPower = 200\n\n  if (easeIn) {\n    element.style.transition = 'ease ' + time + 's'\n  } else {\n    element.style.transition = 'ease-out ' + time + 's'\n  }\n\n  if (getRotation(element) === 0) {\n    rotateString = rotationString((Math.random() - 0.5) * rotationPower)\n  } else if (getRotation(element) > 0) {\n    rotateString = rotationString((Math.random()) * rotationPower / 2 + getRotation(element))\n  } else {\n    rotateString = rotationString((Math.random() - 1) * rotationPower / 2 + getRotation(element))\n  }\n\n  element.style.transform = translateString + rotateString\n\n  await sleep(time * 1000)\n}\n\nconst animateBack = async (element) => {\n  element.style.transition = settings.snapBackDuration + 'ms'\n  const startingPoint = getTranslate(element)\n  const translation = translationString(startingPoint.x * -settings.bouncePower, startingPoint.y * -settings.bouncePower)\n  const rotation = rotationString(getRotation(element) * -settings.bouncePower)\n  element.style.transform = translation + rotation\n\n  await sleep(settings.snapBackDuration * 0.75)\n  element.style.transform = 'none'\n\n  await sleep(settings.snapBackDuration)\n  element.style.transition = '10ms'\n}\n\nconst getSwipeDirection = (property) => {\n  if (Math.abs(property.x) > Math.abs(property.y)) {\n    if (property.x > settings.swipeThreshold) {\n      return 'right'\n    } else if (property.x < -settings.swipeThreshold) {\n      return 'left'\n    }\n  } else {\n    if (property.y > settings.swipeThreshold) {\n      return 'up'\n    } else if (property.y < -settings.swipeThreshold) {\n      return 'down'\n    }\n  }\n  return 'none'\n}\n\nconst calcSpeed = (oldLocation, newLocation) => {\n  const dx = newLocation.x - oldLocation.x\n  const dy = oldLocation.y - newLocation.y\n  const dt = (newLocation.time - oldLocation.time) / 1000\n  return { x: dx / dt, y: dy / dt }\n}\n\nconst translationString = (x, y) => {\n  const translation = 'translate(' + x + 'px, ' + y + 'px)'\n  return translation\n}\n\nconst rotationString = (rot) => {\n  const rotation = 'rotate(' + rot + 'deg)'\n  return rotation\n}\n\nconst getTranslate = (element) => {\n  const style = window.getComputedStyle(element)\n  const matrix = new WebKitCSSMatrix(style.webkitTransform)\n  const ans = { x: matrix.m41, y: -matrix.m42 }\n  return ans\n}\n\nconst getRotation = (element) => {\n  const style = window.getComputedStyle(element)\n  const matrix = new WebKitCSSMatrix(style.webkitTransform)\n  const ans = -Math.asin(matrix.m21) / (2 * Math.PI) * 360\n  return ans\n}\n\nconst dragableTouchmove = (coordinates, element, offset, lastLocation) => {\n  const pos = { x: coordinates.x + offset.x, y: coordinates.y + offset.y }\n  const newLocation = { x: pos.x, y: pos.y, time: new Date().getTime() }\n  const translation = translationString(pos.x, pos.y)\n  const rotCalc = calcSpeed(lastLocation, newLocation).x / 1000\n  const rotation = rotationString(rotCalc * settings.maxTilt)\n  element.style.transform = translation + rotation\n  return newLocation\n}\n\nconst touchCoordinatesFromEvent = (e) => {\n  const touchLocation = e.targetTouches[0]\n  return { x: touchLocation.clientX, y: touchLocation.clientY }\n}\n\nconst mouseCoordinatesFromEvent = (e) => {\n  return { x: e.clientX, y: e.clientY }\n}\n\nconst TinderCard = React.forwardRef(({ flickOnSwipe = true, children, onSwipe, onCardLeftScreen, className, preventSwipe = [], swipeRequirementType = 'velocity', swipeThreshold = settings.swipeThreshold, onSwipeRequirementFulfilled, onSwipeRequirementUnfulfilled }, ref) => {\n  settings.swipeThreshold = swipeThreshold\n  const swipeAlreadyReleased = React.useRef(false)\n\n  const element = React.useRef()\n\n  React.useImperativeHandle(ref, () => ({\n    async swipe (dir = 'right') {\n      if (onSwipe) onSwipe(dir)\n      const power = 1000\n      const disturbance = (Math.random() - 0.5) * 100\n      if (dir === 'right') {\n        await animateOut(element.current, { x: power, y: disturbance }, true)\n      } else if (dir === 'left') {\n        await animateOut(element.current, { x: -power, y: disturbance }, true)\n      } else if (dir === 'up') {\n        await animateOut(element.current, { x: disturbance, y: power }, true)\n      } else if (dir === 'down') {\n        await animateOut(element.current, { x: disturbance, y: -power }, true)\n      }\n      element.current.style.display = 'none'\n      if (onCardLeftScreen) onCardLeftScreen(dir)\n    },\n    async restoreCard () {\n      element.current.style.display = 'block'\n      await animateBack(element.current)\n    }\n  }))\n\n  const handleSwipeReleased = React.useCallback(async (element, speed) => {\n    if (swipeAlreadyReleased.current) { return }\n    swipeAlreadyReleased.current = true\n\n    const currentPostion = getTranslate(element)\n    // Check if this is a swipe\n    const dir = getSwipeDirection(swipeRequirementType === 'velocity' ? speed : currentPostion)\n\n    if (dir !== 'none') {\n      if (onSwipe) onSwipe(dir)\n\n      if (flickOnSwipe) {\n        if (!preventSwipe.includes(dir)) {\n          const outVelocity = swipeRequirementType === 'velocity' ? speed : normalize(currentPostion, 600)\n          await animateOut(element, outVelocity)\n          element.style.display = 'none'\n          if (onCardLeftScreen) onCardLeftScreen(dir)\n          return\n        }\n      }\n    }\n\n    // Card was not flicked away, animate back to start\n    animateBack(element)\n  }, [swipeAlreadyReleased, flickOnSwipe, onSwipe, onCardLeftScreen, preventSwipe, swipeRequirementType])\n\n  const handleSwipeStart = React.useCallback(() => {\n    swipeAlreadyReleased.current = false\n  }, [swipeAlreadyReleased])\n\n  React.useLayoutEffect(() => {\n    let offset = { x: null, y: null }\n    let speed = { x: 0, y: 0 }\n    let lastLocation = { x: 0, y: 0, time: new Date().getTime() }\n    let mouseIsClicked = false\n    let swipeThresholdFulfilledDirection = 'none'\n\n    element.current.addEventListener(('touchstart'), (ev) => {\n      ev.preventDefault()\n      handleSwipeStart()\n      offset = { x: -touchCoordinatesFromEvent(ev).x, y: -touchCoordinatesFromEvent(ev).y }\n    })\n\n    element.current.addEventListener(('mousedown'), (ev) => {\n      ev.preventDefault()\n      mouseIsClicked = true\n      handleSwipeStart()\n      offset = { x: -mouseCoordinatesFromEvent(ev).x, y: -mouseCoordinatesFromEvent(ev).y }\n    })\n\n    const handleMove = (coordinates) => {\n      // Check fulfillment\n      if (onSwipeRequirementFulfilled || onSwipeRequirementUnfulfilled) {\n        const dir = getSwipeDirection(swipeRequirementType === 'velocity' ? speed : getTranslate(element.current))\n        if (dir !== swipeThresholdFulfilledDirection) {\n          swipeThresholdFulfilledDirection = dir\n          if (swipeThresholdFulfilledDirection === 'none') {\n            if (onSwipeRequirementUnfulfilled) onSwipeRequirementUnfulfilled()\n          } else {\n            if (onSwipeRequirementFulfilled) onSwipeRequirementFulfilled(dir)\n          }\n        }\n      }\n\n      // Move\n      const newLocation = dragableTouchmove(coordinates, element.current, offset, lastLocation)\n      speed = calcSpeed(lastLocation, newLocation)\n      lastLocation = newLocation\n    }\n\n    element.current.addEventListener(('touchmove'), (ev) => {\n      ev.preventDefault()\n      handleMove(touchCoordinatesFromEvent(ev))\n    })\n\n    element.current.addEventListener(('mousemove'), (ev) => {\n      ev.preventDefault()\n      if (mouseIsClicked) {\n        handleMove(mouseCoordinatesFromEvent(ev))\n      }\n    })\n\n    element.current.addEventListener(('touchend'), (ev) => {\n      ev.preventDefault()\n      handleSwipeReleased(element.current, speed)\n    })\n\n    element.current.addEventListener(('mouseup'), (ev) => {\n      if (mouseIsClicked) {\n        ev.preventDefault()\n        mouseIsClicked = false\n        handleSwipeReleased(element.current, speed)\n      }\n    })\n\n    element.current.addEventListener(('mouseleave'), (ev) => {\n      if (mouseIsClicked) {\n        ev.preventDefault()\n        mouseIsClicked = false\n        handleSwipeReleased(element.current, speed)\n      }\n    })\n  }, []) // TODO fix so swipeRequirementType can be changed on the fly. Pass as dependency cleanup eventlisteners and update new eventlisteners.\n\n  return (\n    React.createElement('div', { ref: element, className }, children)\n  )\n})\n\nmodule.exports = TinderCard\n"]},"metadata":{},"sourceType":"script"}