[{"/Users/ivanvaci/Downloads/personal/tinder-study/src/index.js":"1","/Users/ivanvaci/Downloads/personal/tinder-study/src/reportWebVitals.js":"2","/Users/ivanvaci/Downloads/personal/tinder-study/src/App.js":"3","/Users/ivanvaci/Downloads/personal/tinder-study/src/store.js":"4","/Users/ivanvaci/Downloads/personal/tinder-study/src/hideSlice.js":"5","/Users/ivanvaci/Downloads/personal/tinder-study/src/components/RadioModal.jsx":"6","/Users/ivanvaci/Downloads/personal/tinder-study/src/components/MultiRadioModal.jsx":"7","/Users/ivanvaci/Downloads/personal/tinder-study/src/components/InputModal.jsx":"8","/Users/ivanvaci/Downloads/personal/tinder-study/src/components/SwipeLeftOrRight.jsx":"9","/Users/ivanvaci/Downloads/personal/tinder-study/src/components/ContinueModal.jsx":"10","/Users/ivanvaci/Downloads/personal/tinder-study/src/components/PerSwipe.jsx":"11"},{"size":653,"mtime":1650862926000,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1650862926000,"results":"14","hashOfConfig":"13"},{"size":1718,"mtime":1650886331392,"results":"15","hashOfConfig":"13"},{"size":210,"mtime":1650882948464,"results":"16","hashOfConfig":"13"},{"size":8209,"mtime":1653247868653,"results":"17","hashOfConfig":"13"},{"size":1419,"mtime":1652211958714,"results":"18","hashOfConfig":"13"},{"size":2204,"mtime":1653245258256,"results":"19","hashOfConfig":"13"},{"size":1102,"mtime":1653242411981,"results":"20","hashOfConfig":"13"},{"size":2876,"mtime":1653245250469,"results":"21","hashOfConfig":"13"},{"size":1135,"mtime":1652211811757,"results":"22","hashOfConfig":"13"},{"size":4297,"mtime":1653248573742,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"z0v8vk",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},"/Users/ivanvaci/Downloads/personal/tinder-study/src/index.js",[],[],[],"/Users/ivanvaci/Downloads/personal/tinder-study/src/reportWebVitals.js",[],[],"/Users/ivanvaci/Downloads/personal/tinder-study/src/App.js",[],[],"/Users/ivanvaci/Downloads/personal/tinder-study/src/store.js",[],[],"/Users/ivanvaci/Downloads/personal/tinder-study/src/hideSlice.js",[],[],"/Users/ivanvaci/Downloads/personal/tinder-study/src/components/RadioModal.jsx",[],[],"/Users/ivanvaci/Downloads/personal/tinder-study/src/components/MultiRadioModal.jsx",[],[],"/Users/ivanvaci/Downloads/personal/tinder-study/src/components/InputModal.jsx",[],[],"/Users/ivanvaci/Downloads/personal/tinder-study/src/components/SwipeLeftOrRight.jsx",["59","60","61","62","63","64","65","66"],[],"/Users/ivanvaci/Downloads/personal/tinder-study/src/components/ContinueModal.jsx",[],[],"/Users/ivanvaci/Downloads/personal/tinder-study/src/components/PerSwipe.jsx",["67","68","69","70","71","72","73"],[],"import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addFinalResults, setAnswer } from \"../hideSlice\";\nimport { Card, Form, Table } from \"react-bootstrap\";\n\nfunction PerSwipe(props) {\n    const [faces, setFaces] = useState({});\n    const context = props.content\n    const key = props.keyForContext\n\n    const dispatch = useDispatch();\n    const showElement = useSelector(state => state.hide.shownElements);\n    const questionElement = useSelector(state => state.hide.questions);\n    const showFinal = useSelector(state => state.hide.showFinal);\n    const dbToChose = useSelector(state => state.hide.dbPics);\n    let db = questionElement.pol == \"Muški\" ? dbToChose[\"Ženski\"] : dbToChose[\"Muški\"]\n    const [showCard, setShowCard] = useState(db);\n    const [osobineValues, setosobineValues] = useState({});\n    const [fileResults, setfileResults] = useState([]);\n\n    useEffect(() => {\n        setShowCard( questionElement.pol == \"Muški\" ? dbToChose[\"Ženski\"] : dbToChose[\"Muški\"]);\n      }, [questionElement.pol]);\n\n    function checkSelected(osob, elem, keyImage){\n        osobineValues[osob] = elem + 1\n        setosobineValues(osobineValues)\n        if(Object.keys(osobineValues).length === 6){\n            let tst = {}\n            tst[keyImage] = osobineValues\n            dispatch(addFinalResults({ keyForQuestion: key, value: tst }))\n            setosobineValues({})\n            fileResults.push(tst)\n            setfileResults(fileResults)\n        }\n\n        if(fileResults.length === showCard.length){\n            dispatch(setAnswer({ keyForQuestion: key, value: fileResults }))\n        }\n    }\n    \n    function sendAnswers(results) {\n    }\n\n    function loopDb (dbPics) {\n        return dbPics.map((item, index) => {\n            return showFinal[index] ? cardRank(item, item.url.replace(\"/images/muska_lica/\", \"\").replace(\"/images/zenska_lica/\", \"\").replace(\".jpg\", \"\")) : \"\"\n        })\n    }\n\n    function cardRank(item, imageKey) {\n        let osobine = [\"Inteligencija\", \"Ambicioznost\", \"Dobra mogućnost zarađivanja\", \"Zdravlje\", \"Poštovanje porodičnih vrednosti\", \"Dobrota\"];\n        return (\n            <Card className=\"text-center\">\n                <Card.Img variant=\"top\" src={item.url} style={{ width: \"250px\", alignSelf: \"center\" }} />\n                <Card.Body>\n                    <Card.Text>\n                        <Form>\n                            <>\n                                <Table striped bordered hover>\n                                    <thead>\n                                        <tr>\n                                            <th></th>\n                                            <th>1 (Malo)</th>\n                                            <th>2</th>\n                                            <th>3</th>\n                                            <th>4 (Srednje)</th>\n                                            <th>5</th>\n                                            <th>6</th>\n                                            <th>7 (Mnogo)</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {osobine.map((osob) => {\n                                            return(\n                                                <tr>\n                                                    <td>{osob}</td>\n                                                    {[...Array(7)].map((elem, index) => (\n                                                        <td><Form.Check inline name={osob} type='radio' id={elem} key={elem} onClick={() => { checkSelected(osob, index, imageKey); }} /></td>\n                                                    ))}\n                                                </tr>\n                                            )\n                                        })}\n                                    </tbody>\n                                </Table>\n                            </>\n                        </Form>\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        )\n    }\n    \n    return (\n        <>\n        { showElement['perSwipe'] ? loopDb(showCard) : \"\"}\n        </>\n    );\n}\n\nexport default PerSwipe;\n",{"ruleId":"74","severity":1,"message":"75","line":11,"column":32,"nodeType":"76","messageId":"77","endLine":11,"endColumn":34},{"ruleId":"74","severity":1,"message":"75","line":16,"column":43,"nodeType":"76","messageId":"77","endLine":16,"endColumn":45},{"ruleId":"78","severity":1,"message":"79","line":18,"column":6,"nodeType":"80","endLine":18,"endColumn":27,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":21,"column":9,"nodeType":"84","messageId":"85","endLine":21,"endColumn":16},{"ruleId":"86","severity":1,"message":"87","line":51,"column":106,"nodeType":"88","endLine":51,"endColumn":143},{"ruleId":"86","severity":1,"message":"87","line":52,"column":104,"nodeType":"88","endLine":52,"endColumn":140},{"ruleId":"74","severity":1,"message":"89","line":62,"column":25,"nodeType":"76","messageId":"77","endLine":62,"endColumn":27},{"ruleId":"74","severity":1,"message":"89","line":86,"column":32,"nodeType":"76","messageId":"77","endLine":86,"endColumn":34},{"ruleId":"82","severity":1,"message":"90","line":7,"column":12,"nodeType":"84","messageId":"85","endLine":7,"endColumn":17},{"ruleId":"82","severity":1,"message":"91","line":7,"column":19,"nodeType":"84","messageId":"85","endLine":7,"endColumn":27},{"ruleId":"82","severity":1,"message":"83","line":8,"column":11,"nodeType":"84","messageId":"85","endLine":8,"endColumn":18},{"ruleId":"74","severity":1,"message":"75","line":16,"column":34,"nodeType":"76","messageId":"77","endLine":16,"endColumn":36},{"ruleId":"74","severity":1,"message":"75","line":22,"column":42,"nodeType":"76","messageId":"77","endLine":22,"endColumn":44},{"ruleId":"78","severity":1,"message":"79","line":23,"column":10,"nodeType":"80","endLine":23,"endColumn":31,"suggestions":"92"},{"ruleId":"82","severity":1,"message":"93","line":42,"column":14,"nodeType":"84","messageId":"85","endLine":42,"endColumn":25},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dbToChose'. Either include it or remove the dependency array.","ArrayExpression",["94"],"no-unused-vars","'context' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '!==' and instead saw '!='.","'faces' is assigned a value but never used.","'setFaces' is assigned a value but never used.",["95"],"'sendAnswers' is defined but never used.",{"desc":"96","fix":"97"},{"desc":"96","fix":"98"},"Update the dependencies array to be: [dbToChose, questionElement.pol]",{"range":"99","text":"100"},{"range":"101","text":"100"},[806,827],"[dbToChose, questionElement.pol]",[1047,1068]]