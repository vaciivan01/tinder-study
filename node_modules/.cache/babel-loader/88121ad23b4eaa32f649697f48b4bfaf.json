{"ast":null,"code":"var _jsxFileName = \"/Users/ivanvaci/Downloads/personal/tinder-study/src/components/RadioModal.jsx\",\n    _s = $RefreshSig$();\n\nimport { Modal, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleVisibility, setAnswer, exitTest } from \"../hideSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction RadioModal(props) {\n  _s();\n\n  const context = props.content;\n  const key = props.keyForContext;\n  const dispatch = useDispatch();\n  const showElement = useSelector(state => state.hide.shownElements);\n\n  function sendAnswers(answer) {\n    console.log(answer);\n\n    if (answer.action === 'exit') {\n      return dispatch(exitTest({\n        keyForQuestion: key,\n        value: answer.text\n      }));\n    }\n\n    dispatch(toggleVisibility({\n      state: showElement,\n      next: props.content.next,\n      current: key\n    }));\n    dispatch(setAnswer({\n      keyForQuestion: key,\n      value: answer.text\n    }));\n  }\n\n  function multiRadio(content) {\n    const rows = [];\n    content[\"options\"].forEach(option => {\n      rows.push( /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => sendAnswers({\n          text: option.text,\n          action: option.text\n        }),\n        children: option.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }, this));\n    });\n    return rows;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"xl\",\n      show: showElement[key],\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: context.headerText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: multiRadio(context)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(RadioModal, \"FXza9atzCE5fjLnF+noGh9Zwdx0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = RadioModal;\nexport default RadioModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"RadioModal\");","map":{"version":3,"sources":["/Users/ivanvaci/Downloads/personal/tinder-study/src/components/RadioModal.jsx"],"names":["Modal","Button","useDispatch","useSelector","toggleVisibility","setAnswer","exitTest","RadioModal","props","context","content","key","keyForContext","dispatch","showElement","state","hide","shownElements","sendAnswers","answer","console","log","action","keyForQuestion","value","text","next","current","multiRadio","rows","forEach","option","push","headerText"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,MAAf,QAA4B,iBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,gBAAT,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,cAAtD;;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzB,QAAMC,OAAO,GAAGD,KAAK,CAACE,OAAtB;AACA,QAAMC,GAAG,GAAGH,KAAK,CAACI,aAAlB;AAEA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,WAAW,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,aAArB,CAA/B;;AAEA,WAASC,WAAT,CAAsBC,MAAtB,EAA8B;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,QAAGA,MAAM,CAACG,MAAP,KAAkB,MAArB,EAA4B;AAC1B,aAAOT,QAAQ,CAACP,QAAQ,CAAC;AAACiB,QAAAA,cAAc,EAAEZ,GAAjB;AAAsBa,QAAAA,KAAK,EAAEL,MAAM,CAACM;AAApC,OAAD,CAAT,CAAf;AACD;;AACDZ,IAAAA,QAAQ,CAACT,gBAAgB,CAAC;AAACW,MAAAA,KAAK,EAAED,WAAR;AAAqBY,MAAAA,IAAI,EAAElB,KAAK,CAACE,OAAN,CAAcgB,IAAzC;AAA+CC,MAAAA,OAAO,EAAEhB;AAAxD,KAAD,CAAjB,CAAR;AACAE,IAAAA,QAAQ,CAACR,SAAS,CAAC;AAACkB,MAAAA,cAAc,EAAEZ,GAAjB;AAAsBa,MAAAA,KAAK,EAAEL,MAAM,CAACM;AAApC,KAAD,CAAV,CAAR;AACD;;AAED,WAASG,UAAT,CAAqBlB,OAArB,EAA8B;AAC1B,UAAMmB,IAAI,GAAG,EAAb;AACAnB,IAAAA,OAAO,CAAC,SAAD,CAAP,CAAmBoB,OAAnB,CAA2BC,MAAM,IAAI;AACjCF,MAAAA,IAAI,CAACG,IAAL,eACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAE,MAAMd,WAAW,CAAC;AAACO,UAAAA,IAAI,EAAEM,MAAM,CAACN,IAAd;AAAoBH,UAAAA,MAAM,EAAES,MAAM,CAACN;AAAnC,SAAD,CAApD;AAAA,kBAAiGM,MAAM,CAACN;AAAxG;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJD;AAKA,WAAOI,IAAP;AACH;;AAED,sBACE;AAAA,2BACE,QAAC,KAAD;AACA,MAAA,IAAI,EAAC,IADL;AAEA,MAAA,IAAI,EAAEf,WAAW,CAACH,GAAD,CAFjB;AAAA,8BAIE,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA,+BACI,QAAC,KAAD,CAAO,KAAP;AAAA,oBAAcF,OAAO,CAACwB;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJF,eAQE,QAAC,KAAD,CAAO,MAAP;AAAA,kBACKL,UAAU,CAACnB,OAAD;AADf;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAgBD;;GA1CQF,U;UAIUL,W,EACGC,W;;;KALbI,U;AA4CT,eAAeA,UAAf","sourcesContent":["import {Modal, Button} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleVisibility, setAnswer, exitTest } from \"../hideSlice\";\n\nfunction RadioModal(props) {\n  const context = props.content\n  const key = props.keyForContext\n\n  const dispatch = useDispatch();\n  const showElement = useSelector(state => state.hide.shownElements);\n\n  function sendAnswers (answer) {\n    console.log(answer);\n    if(answer.action === 'exit'){\n      return dispatch(exitTest({keyForQuestion: key, value: answer.text}))\n    }\n    dispatch(toggleVisibility({state: showElement, next: props.content.next, current: key}))\n    dispatch(setAnswer({keyForQuestion: key, value: answer.text}))\n  }\n\n  function multiRadio (content) {\n      const rows = [];\n      content[\"options\"].forEach(option => {\n          rows.push(\n              <Button variant=\"primary\" onClick={() => sendAnswers({text: option.text, action: option.text})}>{option.text}</Button>    \n          )\n      });\n      return rows;\n  }\n  \n  return (\n    <>\n      <Modal\n      size=\"xl\"\n      show={showElement[key]}\n      >\n        <Modal.Header closeButton>\n            <Modal.Title>{context.headerText}</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Footer>\n            {multiRadio(context)}\n        </Modal.Footer>\n        </Modal>\n    </>\n  );\n}\n\nexport default RadioModal;\n"]},"metadata":{},"sourceType":"module"}