{"ast":null,"code":"var _jsxFileName = \"/Users/ivanvaci/Downloads/personal/tinder-study/src/components/PerSwipe.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addFinalResults, setAnswer } from \"../hideSlice\";\nimport { Card, Form, Table } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PerSwipe(props) {\n  _s();\n\n  const [faces, setFaces] = useState({});\n  const context = props.content;\n  const key = props.keyForContext;\n  const dispatch = useDispatch();\n  const showElement = useSelector(state => state.hide.shownElements);\n  const questionElement = useSelector(state => state.hide.questions);\n  const showFinal = useSelector(state => state.hide.showFinal);\n  const dbToChose = useSelector(state => state.hide.dbPics);\n  let db = questionElement.pol == \"Muški\" ? dbToChose[\"Ženski\"] : dbToChose[\"Muški\"];\n  const [showCard, setShowCard] = useState(db);\n  const [osobineValues, setosobineValues] = useState({});\n  const [fileResults, setfileResults] = useState([]);\n  useEffect(() => {\n    setShowCard(questionElement.pol == \"Muški\" ? dbToChose[\"Ženski\"] : dbToChose[\"Muški\"]);\n  }, [questionElement.pol]);\n\n  function checkSelected(osob, elem, keyImage) {\n    osobineValues[osob] = elem + 1;\n    setosobineValues(osobineValues);\n\n    if (Object.keys(osobineValues).length === 6) {\n      let tst = {};\n      tst[keyImage] = osobineValues;\n      dispatch(addFinalResults({\n        keyForQuestion: key,\n        value: tst\n      }));\n      setosobineValues({});\n      fileResults.push(tst);\n      setfileResults(fileResults);\n    }\n\n    if (fileResults.length === showCard.length) {\n      dispatch(setAnswer({\n        keyForQuestion: key,\n        value: fileResults\n      }));\n    }\n  }\n\n  function sendAnswers(results) {}\n\n  function loopDb(dbPics) {\n    return dbPics.map((item, index) => {\n      return showFinal[index] ? cardRank(item, item.url.replace(\"/images/muska_lica/\", \"\").replace(\"/images/zenska_lica/\", \"\").replace(\".jpg\", \"\")) : \"\";\n    });\n  }\n\n  function cardRank(item, imageKey) {\n    let osobine = [\"Inteligencija\", \"Ambicioznost\", \"Dobra mogućnost zarađivanja\", \"Zdravlje\", \"Poštovanje porodičnih vrednosti\", \"Dobrota\"];\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        src: item.url,\n        style: {\n          width: \"250px\",\n          alignSelf: \"center\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                striped: true,\n                bordered: true,\n                hover: true,\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"1 (Malo)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 64,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 66,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"4 (Srednje)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 67,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"5\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"6\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 69,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"7 (Mnogo)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 70,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: osobine.map(osob => {\n                    return /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: osob\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 77,\n                        columnNumber: 53\n                      }, this), [...Array(7)].map((elem, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                          inline: true,\n                          name: osob,\n                          type: \"radio\",\n                          id: elem,\n                          onClick: () => {\n                            checkSelected(osob, index, imageKey);\n                          }\n                        }, elem, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 79,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 79,\n                        columnNumber: 57\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 49\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showElement['perSwipe'] ? loopDb(showCard) : \"\"\n  }, void 0, false);\n}\n\n_s(PerSwipe, \"ULu5LckJ4wn0/+7wayuk2ITdmb4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = PerSwipe;\nexport default PerSwipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"PerSwipe\");","map":{"version":3,"sources":["/Users/ivanvaci/Downloads/personal/tinder-study/src/components/PerSwipe.jsx"],"names":["useState","useEffect","useDispatch","useSelector","addFinalResults","setAnswer","Card","Form","Table","PerSwipe","props","faces","setFaces","context","content","key","keyForContext","dispatch","showElement","state","hide","shownElements","questionElement","questions","showFinal","dbToChose","dbPics","db","pol","showCard","setShowCard","osobineValues","setosobineValues","fileResults","setfileResults","checkSelected","osob","elem","keyImage","Object","keys","length","tst","keyForQuestion","value","push","sendAnswers","results","loopDb","map","item","index","cardRank","url","replace","imageKey","osobine","width","alignSelf","Array"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addFinalResults, setAnswer } from \"../hideSlice\";\nimport { Card, Form, Table } from \"react-bootstrap\";\n\nfunction PerSwipe(props) {\n    const [faces, setFaces] = useState({});\n    const context = props.content\n    const key = props.keyForContext\n\n    const dispatch = useDispatch();\n    const showElement = useSelector(state => state.hide.shownElements);\n    const questionElement = useSelector(state => state.hide.questions);\n    const showFinal = useSelector(state => state.hide.showFinal);\n    const dbToChose = useSelector(state => state.hide.dbPics);\n    let db = questionElement.pol == \"Muški\" ? dbToChose[\"Ženski\"] : dbToChose[\"Muški\"]\n    const [showCard, setShowCard] = useState(db);\n    const [osobineValues, setosobineValues] = useState({});\n    const [fileResults, setfileResults] = useState([]);\n\n    useEffect(() => {\n        setShowCard( questionElement.pol == \"Muški\" ? dbToChose[\"Ženski\"] : dbToChose[\"Muški\"]);\n      }, [questionElement.pol]);\n\n    function checkSelected(osob, elem, keyImage){\n        osobineValues[osob] = elem + 1\n        setosobineValues(osobineValues)\n        if(Object.keys(osobineValues).length === 6){\n            let tst = {}\n            tst[keyImage] = osobineValues\n            dispatch(addFinalResults({ keyForQuestion: key, value: tst }))\n            setosobineValues({})\n            fileResults.push(tst)\n            setfileResults(fileResults)\n        }\n\n        if(fileResults.length === showCard.length){\n            dispatch(setAnswer({ keyForQuestion: key, value: fileResults }))\n        }\n    }\n    \n    function sendAnswers(results) {\n    }\n\n    function loopDb (dbPics) {\n        return dbPics.map((item, index) => {\n            return showFinal[index] ? cardRank(item, item.url.replace(\"/images/muska_lica/\", \"\").replace(\"/images/zenska_lica/\", \"\").replace(\".jpg\", \"\")) : \"\"\n        })\n    }\n\n    function cardRank(item, imageKey) {\n        let osobine = [\"Inteligencija\", \"Ambicioznost\", \"Dobra mogućnost zarađivanja\", \"Zdravlje\", \"Poštovanje porodičnih vrednosti\", \"Dobrota\"];\n        return (\n            <Card className=\"text-center\">\n                <Card.Img variant=\"top\" src={item.url} style={{ width: \"250px\", alignSelf: \"center\" }} />\n                <Card.Body>\n                    <Card.Text>\n                        <Form>\n                            <>\n                                <Table striped bordered hover>\n                                    <thead>\n                                        <tr>\n                                            <th></th>\n                                            <th>1 (Malo)</th>\n                                            <th>2</th>\n                                            <th>3</th>\n                                            <th>4 (Srednje)</th>\n                                            <th>5</th>\n                                            <th>6</th>\n                                            <th>7 (Mnogo)</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {osobine.map((osob) => {\n                                            return(\n                                                <tr>\n                                                    <td>{osob}</td>\n                                                    {[...Array(7)].map((elem, index) => (\n                                                        <td><Form.Check inline name={osob} type='radio' id={elem} key={elem} onClick={() => { checkSelected(osob, index, imageKey); }} /></td>\n                                                    ))}\n                                                </tr>\n                                            )\n                                        })}\n                                    </tbody>\n                                </Table>\n                            </>\n                        </Form>\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        )\n    }\n    \n    return (\n        <>\n        { showElement['perSwipe'] ? loopDb(showCard) : \"\"}\n        </>\n    );\n}\n\nexport default PerSwipe;\n"]},"metadata":{},"sourceType":"module"}