{"ast":null,"code":"var _jsxFileName = \"/Users/ivanvaci/Downloads/personal/tinder-study/src/components/PerSwipe.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleVisibility, setAnswer } from \"../hideSlice\";\nimport { Card, Form, Table } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PerSwipe(props) {\n  _s();\n\n  const [faces, setFaces] = useState({});\n  const context = props.content;\n  const key = props.keyForContext;\n  const dispatch = useDispatch();\n  const showElement = useSelector(state => state.hide.shownElements);\n  const questionElement = useSelector(state => state.hide.questions);\n  const showFinal = useSelector(state => state.hide.showFinal);\n  const dbPics = useSelector(state => state.hide.dbPics);\n  let osobineValues = {};\n  console.log(showFinal); // let showFace = {}\n  // dbPics.dbMuski.map((item, index) => {\n  //     let kk = item.url.replace(\"/images/muska_lica/\", \"\").replace(\"/images/zenska_lica/\", \"\").replace(\".jpg\", \"\")\n  //     showFace[kk] = false\n  //     if(Object.keys(showFace).length === 1){\n  //         showFace[kk] = true\n  //     }\n  // });\n  // setFaces(showFace)\n\n  function checkSelected(osob, elem, key) {\n    osobineValues[osob] = elem + 1;\n\n    if (Object.keys(osobineValues).length === 6) {\n      let tst = {};\n      tst[key] = osobineValues;\n      sendAnswers(tst);\n    }\n  }\n\n  function sendAnswers(results) {\n    dispatch(addFinalResults({\n      results\n    }));\n  }\n\n  function cardRank(item, imageKey) {\n    let osobine = [\"Inteligencija\", \"Ambicioznost\", \"Dobra mogućnost zarađivanja\", \"Zdravlje\", \"Poštovanje porodičnih vrednosti\", \"Dobrota\"];\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        src: item.url,\n        style: {\n          width: \"250px\",\n          alignSelf: \"center\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                striped: true,\n                bordered: true,\n                hover: true,\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 56,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 57,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 58,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 59,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 60,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"5\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 61,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"6\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: osobine.map(osob => {\n                    return /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: osob\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 70,\n                        columnNumber: 53\n                      }, this), [...Array(7)].map((elem, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                          inline: true,\n                          name: osob,\n                          type: \"radio\",\n                          id: elem,\n                          onClick: () => {\n                            checkSelected(osob, index, imageKey);\n                          }\n                        }, elem, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 72,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 72,\n                        columnNumber: 57\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 69,\n                      columnNumber: 49\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: dbPics.dbMuski.map((item, index) => {\n      return showFinal[index] ? cardRank(item, item.url.replace(\"/images/muska_lica/\", \"\").replace(\"/images/zenska_lica/\", \"\").replace(\".jpg\", \"\")) : \"\";\n    })\n  }, void 0, false);\n}\n\n_s(PerSwipe, \"0O2Proshjygjk9NsX3Koty4Y2wk=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = PerSwipe;\nexport default PerSwipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"PerSwipe\");","map":{"version":3,"sources":["/Users/ivanvaci/Downloads/personal/tinder-study/src/components/PerSwipe.jsx"],"names":["useState","useDispatch","useSelector","toggleVisibility","setAnswer","Card","Form","Table","PerSwipe","props","faces","setFaces","context","content","key","keyForContext","dispatch","showElement","state","hide","shownElements","questionElement","questions","showFinal","dbPics","osobineValues","console","log","checkSelected","osob","elem","Object","keys","length","tst","sendAnswers","results","addFinalResults","cardRank","item","imageKey","osobine","url","width","alignSelf","map","Array","index","dbMuski","replace"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleVisibility, setAnswer } from \"../hideSlice\";\nimport { Card, Form, Table } from \"react-bootstrap\";\n\nfunction PerSwipe(props) {\n    const [faces, setFaces] = useState({});\n    const context = props.content\n    const key = props.keyForContext\n\n    const dispatch = useDispatch();\n    const showElement = useSelector(state => state.hide.shownElements);\n    const questionElement = useSelector(state => state.hide.questions);\n    const showFinal = useSelector(state => state.hide.showFinal);\n    const dbPics = useSelector(state => state.hide.dbPics);\n    let osobineValues = {}\n\n    console.log(showFinal);\n\n    // let showFace = {}\n    // dbPics.dbMuski.map((item, index) => {\n    //     let kk = item.url.replace(\"/images/muska_lica/\", \"\").replace(\"/images/zenska_lica/\", \"\").replace(\".jpg\", \"\")\n    //     showFace[kk] = false\n    //     if(Object.keys(showFace).length === 1){\n    //         showFace[kk] = true\n    //     }\n    // });\n    // setFaces(showFace)\n\n    function checkSelected(osob, elem, key){\n        osobineValues[osob] = elem + 1\n        if(Object.keys(osobineValues).length === 6){\n            let tst = {}\n            tst[key] = osobineValues\n            sendAnswers(tst)\n        }\n    }\n\n\n    function sendAnswers(results) {\n          dispatch(addFinalResults({results}))\n    }\n\n    function cardRank(item, imageKey) {\n        let osobine = [\"Inteligencija\", \"Ambicioznost\", \"Dobra mogućnost zarađivanja\", \"Zdravlje\", \"Poštovanje porodičnih vrednosti\", \"Dobrota\"];\n        return (\n            <Card className=\"text-center\">\n                <Card.Img variant=\"top\" src={item.url} style={{ width: \"250px\", alignSelf: \"center\" }} />\n                <Card.Body>\n                    <Card.Text>\n                        <Form>\n                            <>\n                                <Table striped bordered hover>\n                                    <thead>\n                                        <tr>\n                                            <th></th>\n                                            <th>1</th>\n                                            <th>2</th>\n                                            <th>3</th>\n                                            <th>4</th>\n                                            <th>5</th>\n                                            <th>6</th>\n                                            <th>7</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {osobine.map((osob) => {\n                                            return(\n                                                <tr>\n                                                    <td>{osob}</td>\n                                                    {[...Array(7)].map((elem, index) => (\n                                                        <td><Form.Check inline name={osob} type='radio' id={elem} key={elem} onClick={() => { checkSelected(osob, index, imageKey); }} /></td>\n                                                    ))}\n                                                </tr>\n                                            )\n                                        })}\n                                    </tbody>\n                                </Table>\n                            </>\n                        </Form>\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        )\n    }\n\n    return (\n        <>\n            {dbPics.dbMuski.map((item, index) => {\n                return showFinal[index] ? cardRank(item, item.url.replace(\"/images/muska_lica/\", \"\").replace(\"/images/zenska_lica/\", \"\").replace(\".jpg\", \"\")) : \"\"\n            })}\n\n        </>\n    );\n}\n\nexport default PerSwipe;\n"]},"metadata":{},"sourceType":"module"}